package com.myfirstproject;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import java.time.Duration;
public class Day06_IFrameTest {
    WebDriver driver;
     @Before
     public void setUp(){
         System.setProperty("webdriver.chrome.driver","drivers/chromedriver.exe");
         driver = new ChromeDriver();
         driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
         driver.manage().window().maximize();
          driver.get("https://the-internet.herokuapp.com/iframe");
    }
    /*
     * If your test case fails, there might be different reasons:
     * 1. Locator may not be correct
     * 2. If your locator is correct, then it can be time out issue. You can add more waits
      * 3. If it is not timeout issue, then element might be inside the iframe. You must switch to iframe first
     *
     * */
     @Test
      public void iframeTest(){
          //    Verify the Bolded text contains "Editor"
          String boldedText = driver.findElement(By.xpath("//h3")).getText();
           Assert.assertTrue(boldedText.contains("Editor"));
           //        WE MUST SWITCH TO THE IFRAME TO LOCATE THE ELEMENTS INSIDE THE IFRAME
           //        THERE ARE 3 WAYS TO SWITCH TO IFRAME
           //        1. INDEX. index starts from 0
           //        driver.switchTo().frame(0);// switching the first frame by index
           //        2. ID OR NAME
           //        driver.switchTo().frame("mce_0_ifr");