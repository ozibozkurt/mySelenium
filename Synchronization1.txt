package com.myfirstproject;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.time.Duration;
public class Day10_Synchronization1 {
    //        DO NOT USE TEST BASE, SINCE IMPLICIT WAIT IS ALREADY THERE
    WebDriver driver;
     @Before
     public void setUp(){
          WebDriverManager.chromedriver().setup();
           driver= new ChromeDriver();
            driver.manage().window().maximize();
             //        Go to https://the-internet.herokuapp.com/dynamic_controls
              driver.get("https://the-internet.herokuapp.com/dynamic_controls");
            }
    @Test
    public void synchronization1(){
        Click on remove button
        driver.findElement(By.xpath("(//button[@type='button'])[1]")).click();
//        And verify the message is equal to "It's gone!"
        /*
         * After we click on the button, the It's gone! message take a few seconds.
         * Note that IF I DON'T USE WAIT, then element will not be found
          * NoSuchElementException
           *We will use Explicit Wait for the message
            * 1. Create the WebDriverWait object
              * 2. Use appropriate condition
              *  */
//        1. CREATE WEBDRIVERWAIT object
//        WebDriverWait wait = new WebDriverWait(driver,10);//SELENIUM3
 WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));//SELENIUM4
 //        2. Use for a specific condition
 //        We have problem of visibility on the It's gone message
 //        So we will wait for that locator
 //        Explicit wait does the followings:
 //        1. waits for the element up to 10 secs
 //        2. If the element is visible in 10 secs, then it RETURNS that element
  WebElement goneMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//p[@id='message']")));